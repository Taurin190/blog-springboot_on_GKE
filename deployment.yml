apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
  generation: 5
  labels:
    app: blog-springboot-app
  name: blog-springboot-app
  namespace: default
  resourceVersion: "361309"
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/blog-springboot-app
  uid: fb3b440a-f78d-11e8-bc65-42010a92000e
spec:
  replicas: 1
  selector:
    matchLabels:
      app: blog-springboot-app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: blog-springboot-app
    spec:
      containers:
      - env:
        - name: SPRING_JPA_HIBERNATE_DDL-AUTO
          value: create-drop
        - name: SPRING_DATASOURCE_URL
          value: jdbc:mysql://google/blog?cloudSqlInstance=taurin190com:asia-northeast1:dtaurin190com&socketFactory=com.google.cloud.sql.mysql.SocketFactory&useSSL=false
        - name: SPRING_DATASOURCE_DRIVER_CLASS_NAME
          value: com.mysql.jdbc.Driver
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: cloudsql-db-credentials
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: cloudsql-db-credentials
        image: gcr.io/taurin190com/blog-springboot:1.5
        imagePullPolicy: Always
        name: blog-springboot
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        livenessProbe:
          tcpSocket:
            port: 8080
            initialDelaySeconds: 15
            timeoutSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 8080
            initialDelaySeconds: 5
            periodSeconds: 60
            timeoutSeconds: 10
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30